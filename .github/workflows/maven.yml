name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Fetch Commit Messages
      run: |
        git fetch --prune --tags
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [[ -z "$LATEST_TAG" ]]; then
          COMMITS=$(git log --pretty=format:"- %s")
        else
          COMMITS=$(git log $LATEST_TAG..HEAD --pretty=format:"- %s")
        fi
        echo "COMMITS<<EOF" >> $GITHUB_ENV
        echo -e "${COMMITS}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Generate and Push Tag
      run: |
        RELEASE_TAG=${GITHUB_SHA:0:7}
        echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag $RELEASE_TAG ${{ github.sha }}
        git push origin $RELEASE_TAG

    - name: Archive Repository
      run: |
        mkdir -p ${{ github.workspace }} # Ensure the working directory exists
        git archive --format=zip --output=${{ github.workspace }}/${{ github.repository }}.zip HEAD

    - name: Prepare Jar File
      run: |
        mkdir -p target # Ensure the target directory exists
        mv target/*.jar ${{ github.workspace }}/${{ github.repository }}.jar

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        name: Release ${{ env.RELEASE_TAG }}
        body: |
          Changes in this Release:
          ${{ env.COMMITS }}
        draft: false
        prerelease: false
        files: |
          ${{ github.workspace }}/${{ github.repository }}.jar
          ${{ github.workspace }}/${{ github.repository }}.zip
